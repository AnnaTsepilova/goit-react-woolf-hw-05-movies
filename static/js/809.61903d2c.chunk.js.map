{"version":3,"file":"static/js/809.61903d2c.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MovieDetails/MovieDetails.jsx","services/moviesApi.js","services/notifications.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  padding: 30px 0;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderWrapper } from 'components/Loader/Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderWrapper>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#fd5103\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </LoaderWrapper>\n  );\n};\n\nexport default Loader;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieCardContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n\n  width: 1440px;\n  padding: 32px 15px;\n`;\n\nexport const MovieCard = styled.div`\n  display: block;\n  width: 100%;\n  height: auto;\n`;\n\nexport const MainInfoWrapper = styled.div`\n  display: flex;\n  padding-top: 32px;\n  padding-bottom: 32px;\n`;\n\nexport const PosterWrapper = styled.div`\n  display: block;\n  width: 328px;\n  height: auto;\n  object-fit: cover;\n`;\nexport const Poster = styled.img`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const Description = styled.div`\n  padding-left: 32px;\n  max-width: 900px;\n`;\n\nexport const MovieTitle = styled.h1`\n  margin-top: 24px;\n  font-size: 32px;\n`;\nexport const DescrTitle = styled.h3`\n  margin-top: 24px;\n  font-size: 20px;\n`;\n\nexport const Text = styled.p`\n  margin-top: 14px;\n  color: #fcfcfcb7;\n`;\n\nexport const TextDate = styled(Text)`\n  margin-top: 24px;\n`;\n\nexport const AddInfoWrapper = styled(MainInfoWrapper)`\n  padding-top: 36px;\n  border-top: 1px solid rgb(253, 81, 3);\n  align-items: center;\n`;\n\nexport const SubTitle = styled.h2`\n  margin-right: 16px;\n  font-size: 24px;\n`;\nexport const AddInfoLink = styled(NavLink)`\n  display: block;\n  text-decoration: none;\n  margin-right: 16px;\n  padding: 10px 16px;\n  font-size: 18px;\n  color: #fcfcfc;\n  outline: none;\n  border: 1px solid #e3e3e3;\n  border-radius: 8px;\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.active,\n  &:hover {\n    transform: scale(1.03);\n    border: 1px solid #fd5103;\n    box-shadow: rgb(253, 81, 3) 0px 0px 5px 2px;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackLink = styled(NavLink)`\n  display: flex;\n  justify-content: space-between;\n\n  background-size: 50%;\n  background-repeat: no-repeat;\n  background-position: center;\n\n  margin-right: 16px;\n  padding: 8px 16px;\n\n  width: 140px;\n\n  text-decoration: none;\n\n  font-size: 18px;\n  color: #fcfcfc;\n  background-color: #202025;\n\n  outline: none;\n  border: 1px solid #e3e3e3;\n  border-radius: 8px;\n\n  cursor: pointer;\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n    border: 1px solid rgb(253, 81, 3);\n    box-shadow: rgb(253, 81, 3) 0px 0px 5px 2px;\n  }\n`;\n","import { BackLink } from 'components/BackLink/BackLink.styled';\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport { useLocation } from 'react-router-dom';\n\nconst ButtonGoBack = onClick => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  return (\n    <BackLink to={backLinkHref}>\n      <HiArrowNarrowLeft\n        style={{ width: '1.3em', height: '1.3em', marginRight: '8px' }}\n      />\n      Go back\n    </BackLink>\n  );\n};\n\nexport default ButtonGoBack;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport * as notify from 'services/notifications';\n\nimport {\n  MovieCardContainer,\n  MovieCard,\n  MainInfoWrapper,\n  PosterWrapper,\n  Poster,\n  Description,\n  MovieTitle,\n  DescrTitle,\n  Text,\n  TextDate,\n  AddInfoWrapper,\n  SubTitle,\n  AddInfoLink,\n} from 'components/MovieDetails/MovieDetails.styled';\n\nimport { getMoviesDetails } from 'services/moviesApi';\nimport ButtonGoBack from 'components/BackLink/BackLink';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [genres, setGenres] = useState([]);\n  const location = useLocation();\n\n  let moviePosterSrc = require('services/no-poster.png');\n  if (movie.poster_path) {\n    moviePosterSrc = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n  }\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    async function fetchData() {\n      try {\n        setIsLoading(true);\n        const { data } = await getMoviesDetails(movieId);\n        setMovie(data);\n        setGenres(data.genres.map(genre => genre.name).join(' '));\n      } catch (error) {\n        notify.notificationError(`${notify.ERROR_MESSAGE} ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      <MovieCardContainer>\n        <ButtonGoBack />\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <MovieCard>\n            <MainInfoWrapper>\n              <PosterWrapper>\n                <Poster src={moviePosterSrc} alt={movie.title} width={270} />\n              </PosterWrapper>\n              <Description>\n                <MovieTitle>{movie.title}</MovieTitle>\n                <TextDate>\n                  Release date:{' '}\n                  {new Date(movie.release_date).toLocaleDateString()}\n                </TextDate>\n                <Text>\n                  User Score: {Math.round(movie.vote_average * 1000) / 100}%\n                </Text>\n                <DescrTitle>Overview:</DescrTitle>\n                <Text>{movie.overview}</Text>\n                <DescrTitle>Genres:</DescrTitle>\n                <Text>{genres}</Text>\n              </Description>\n            </MainInfoWrapper>\n            <AddInfoWrapper>\n              <SubTitle>Additional information</SubTitle>\n              <AddInfoLink to={`cast`} state={location.state}>\n                Cast\n              </AddInfoLink>\n              <AddInfoLink to={`reviews`} state={location.state}>\n                Reviews\n              </AddInfoLink>\n            </AddInfoWrapper>\n          </MovieCard>\n        )}\n      </MovieCardContainer>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b0cf6b13af537de1f960eba55e00f400';\n\nasync function getTrendingMovies() {\n  const response = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n  return response;\n}\n\nasync function getQueryMovies(searchQuery) {\n  return await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1`\n  );\n}\n\nasync function getMoviesDetails(movie_id) {\n  return await axios.get(`movie/${movie_id}?api_key=${API_KEY}`);\n}\n\nasync function getMoviesGenresList() {\n  return await axios.get(`genre/movie/list?api_key=${API_KEY}`);\n}\n\nasync function getMovieCast(movie_id) {\n  return await axios.get(`movie/${movie_id}/credits?api_key=${API_KEY}`);\n}\n\nasync function getMovieReviews(movieId) {\n  return await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n}\n\nexport {\n  getTrendingMovies,\n  getQueryMovies,\n  getMoviesDetails,\n  getMoviesGenresList,\n  getMovieCast,\n  getMovieReviews,\n};\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst INFO_MESSAGE =\n  \"We're sorry, but you've reached the end of search results.\";\nconst EMPTY_QUERY_MESSAGE = 'Please enter your search query.';\nconst NO_FOUND_MESSAGE =\n  'Sorry, there are no movies matching your search query. Please try again.';\nconst NO_FOUND_CAST = \"We don't have any cast for this movie.\";\nconst NO_FOUND_REVIEWS = \"We don't have any reviews for this movie.\";\nconst ERROR_MESSAGE = 'API error:';\n\nfunction notificationInfo(message) {\n  toast.info(message);\n}\nfunction notificationWarning(message) {\n  toast.warn(message);\n}\nfunction notificationError(message) {\n  toast.error(message);\n}\n\nexport {\n  INFO_MESSAGE,\n  EMPTY_QUERY_MESSAGE,\n  NO_FOUND_MESSAGE,\n  NO_FOUND_CAST,\n  NO_FOUND_REVIEWS,\n  ERROR_MESSAGE,\n  notificationInfo,\n  notificationWarning,\n  notificationError,\n};\n"],"names":["LoaderWrapper","styled","_templateObject","_taggedTemplateLiteral","_jsx","children","ThreeDots","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","MovieCardContainer","MovieCard","_templateObject2","MainInfoWrapper","_templateObject3","PosterWrapper","_templateObject4","Poster","_templateObject5","Description","_templateObject6","MovieTitle","_templateObject7","DescrTitle","_templateObject8","Text","_templateObject9","TextDate","_templateObject10","AddInfoWrapper","_templateObject11","SubTitle","_templateObject12","AddInfoLink","NavLink","_templateObject13","BackLink","onClick","_location$state$from","_location$state","backLinkHref","useLocation","state","from","_jsxs","to","HiArrowNarrowLeft","style","marginRight","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","genres","setGenres","location","moviePosterSrc","require","poster_path","concat","useEffect","_fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getMoviesDetai","data","_context","prev","next","getMoviesDetails","sent","map","genre","name","join","t0","notify","message","finish","stop","apply","arguments","fetchData","_Fragment","ButtonGoBack","Loader","src","alt","title","Date","release_date","toLocaleDateString","Math","round","vote_average","overview","Suspense","fallback","Outlet","axios","API_KEY","getTrendingMovies","_getTrendingMovies","response","abrupt","getQueryMovies","_x","_getQueryMovies","_callee2","searchQuery","_context2","_x2","_getMoviesDetails","_callee3","movie_id","_context3","getMovieCast","_x3","_getMovieCast","_callee5","_context5","getMovieReviews","_x4","_getMovieReviews","_callee6","_context6","EMPTY_QUERY_MESSAGE","NO_FOUND_MESSAGE","NO_FOUND_CAST","NO_FOUND_REVIEWS","ERROR_MESSAGE","notificationWarning","toast","notificationError"],"sourceRoot":""}
{"version":3,"file":"static/js/984.cbeef833.chunk.js","mappings":"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","sources":["pages/Movies/Movies.styled.jsx","components/MoviesSearch/MoviesSearch.styled.jsx","components/MoviesSearch/MoviesSearch.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesPageWrapper = styled.main`\n  min-height: calc(100vh - 64px);\n`;\n","import styled from 'styled-components';\n\nexport const SearchWrapper = styled.div`\n  height: 100%;\n\n  margin-left: auto;\n  margin-right: auto;\n  width: 1440px;\n  padding: 36px 15px 0 15px;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #202025;\n  border-radius: 4px;\n  outline: none;\n  overflow: hidden;\n\n  border: 1px solid rgb(253, 81, 3);\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 50%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.8;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  border-left: 1px solid rgb(253, 81, 3);\n  background-color: #202025;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  padding-left: 15px;\n  padding-right: 4px;\n\n  background-color: #202025;\n  color: #fcfcfc;\n\n  -webkit-text-fill-color: #fcfcfc;\n  -webkit-box-shadow: 0 0 0px 40rem #202025 inset;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n    color: rgba(255, 255, 255, 0.76);\n  }\n\n  &:textarea {\n    background-color: #202025;\n    color: #fcfcfc;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { ImSearch } from 'react-icons/im';\n\nimport {\n  SearchWrapper,\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n} from 'components/MoviesSearch/MoviesSearch.styled';\n\nimport * as notify from 'services/notifications';\n\nconst MoviesSearch = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleSearchQuery = event => {\n    let value = event.currentTarget.value.toLowerCase();\n    setSearchParams(value !== '' ? { search: value } : {});\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    let query = form.searchQuery.value.toLowerCase();\n    if (query.trim() === '') {\n      return notify.notificationWarning(notify.EMPTY_QUERY_MESSAGE);\n    }\n    onSubmit(query);\n    setSearchQuery('');\n    form.reset();\n  };\n\n  useEffect(() => {\n    const search = searchParams.get('search') ?? '';\n    setSearchQuery(search);\n    if (!searchQuery) {\n      return;\n    }\n\n    onSubmit(search);\n  }, [onSubmit, searchParams, searchQuery]);\n\n  return (\n    <SearchWrapper>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormInput\n          type=\"text\"\n          name=\"searchQuery\"\n          autoComplete=\"off\"\n          placeholder=\"Search movies\"\n          onChange={handleSearchQuery}\n        />\n        <SearchFormButton type=\"submit\">\n          <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n          <ImSearch\n            style={{\n              width: '1.5em',\n              height: '1.5em',\n              fill: 'rgb(253, 81, 3)',\n            }}\n          />\n        </SearchFormButton>\n      </SearchForm>\n    </SearchWrapper>\n  );\n};\n\nexport default MoviesSearch;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nimport { MoviesGalleryWrapper } from 'pages/Home/Home.styled';\nimport { MoviesPageWrapper } from 'pages/Movies/Movies.styled';\n\nimport MoviesSearch from 'components/MoviesSearch/MoviesSearch';\nimport MoviesGalleryList from 'components/MoviesGalleryList/MoviesGalleryList';\nimport Loader from 'components/Loader/Loader';\nimport { getQueryMovies } from 'services/moviesApi';\nimport * as notify from 'services/notifications';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleFormSubmit = newSearchQuery => {\n    setSearchQuery(newSearchQuery);\n  };\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    async function fetchData() {\n      try {\n        setIsLoading(true);\n        const { data } = await getQueryMovies(searchQuery);\n        setMovies(data.results);\n\n        if (!data.results.length) {\n          notify.notificationError(notify.NO_FOUND_MESSAGE);\n        }\n      } catch (error) {\n        notify.notificationError(`${notify.ERROR_MESSAGE} ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchData();\n  }, [searchQuery]);\n\n  return (\n    <MoviesPageWrapper>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n      <MoviesSearch onSubmit={handleFormSubmit} />\n      <MoviesGalleryWrapper>\n        {movies && <MoviesGalleryList movies={movies} />}\n        {isLoading && <Loader />}\n      </MoviesGalleryWrapper>\n    </MoviesPageWrapper>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesPageWrapper","styled","_templateObject","_taggedTemplateLiteral","SearchWrapper","SearchForm","_templateObject2","SearchFormButton","_templateObject3","SearchFormButtonLabel","_templateObject4","SearchFormInput","_templateObject5","_ref","onSubmit","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","_searchParams$get","search","get","_jsx","children","_jsxs","event","preventDefault","form","currentTarget","query","value","toLowerCase","trim","notify","reset","type","name","autoComplete","placeholder","onChange","ImSearch","style","width","height","fill","_useState3","_useState4","movies","setMovies","_useState5","_useState6","isLoading","setIsLoading","_fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getQueryMovies","data","_context","prev","next","getQueryMovies","sent","results","length","t0","concat","message","finish","stop","apply","arguments","fetchData","Suspense","fallback","Loader","Outlet","MoviesSearch","newSearchQuery","MoviesGalleryWrapper","MoviesGalleryList"],"sourceRoot":""}